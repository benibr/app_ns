#!/bin/bash

## functions
function show_usage {
	echo -e "Usage: app_ns.sh APP CONFIG"
	echo -e "\t\tAPP\tan application which should be routed only via openvpn"
	echo -e "\t\tCONFIG\tpath to openvpn config"
}

#
case "$script_type" in
"up")
	ip netns add trnt
	ip netns exec trnt ip link set dev lo up
	ip link set dev "$1" up netns trnt mtu "$2"
	test -n "$ifconfig_ipv6_local" && ip netns exec trnt ip addr add dev "$1" "$ifconfig_ipv6_local"/112
	ip netns exec trnt ip addr add dev "$1" "$4/${ifconfig_netmask:-30}" ${ifconfig_broadcast:+broadcast "$ifconfig_broadcast"}
	exit 0
;;

"route-up")
	ip netns exec trnt ip route add default via "$route_vpn_gateway"
	test -n "$ifconfig_ipv6_remote" && ip netns exec vpn ip route add default via "$ifconfig_ipv6_remote"
	exit 0
;;
"down")
	ip netns delete trnt
	exit
	;;
"*")
	#nop
;;
esac

USER="user"
CONFIG="$2"
APP="$(which $1)"
NS_NAME="trnt"

CONFIGDIR=$(dirname $CONFIG )
VPN_DEV="$NS_NAME";VPN_DEV+="-vpn"
VPN_PID="/tmp/torrent-vpn.pid"

#start VPN
openvpn --config $CONFIG --writepid $VPN_PID  --dev $VPN_DEV --dev-type tun --daemon --cd "$CONFIGDIR" --route-noexec --ifconfig-noexec --up netns-up --route-up netns-up
#wait for VPN_IP
while [ -z $VPN_IP ]; do
  VPN_IP=$(ip netns exec $NS_NAME ip addr show dev $VPN_DEV | grep inet | awk '{print $2}' | cut -f 1 -d /)
  sleep 1
done

#start application in namespace
ip netns exec $NS_NAME su "$USER" -c "$APP"

#cleanup
ip netns delete $NS_NAME
kill $(cat /tmp/torrent-vpn.pid)
